<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>시원한물냉의 사람사는 이야기</title>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>[Vue.js Express] 이용한 개발환경 세팅하기</title>
        <description>&lt;h4 id=&quot;express와-vuejs를-이용한-개발환경-세팅하기&quot;&gt;Express와 Vue.js를 이용한 개발환경 세팅하기&lt;/h4&gt;
&lt;p&gt;구글에 검색해보면 위 키워드로 검색하면 무수히 많은 자료가 나온다.
여러 자료를 보고 내 입맛에 딱 맞는 설명을 찾기 어려워 (좀 더 검색하면 있을지도?)
정리도 할 겸 남겨보도록 한다.&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;개념도&quot;&gt;개념도&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_4/img_structure.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;IE, Chrome등의 브라우저를 통해 Vue.js로 만들어진 웹페이지에 접속하고 Express로 만들어진 서버와 통신한다.
Express는 MySQL, ORACLE등의 데이터베이스와 연결된 형태를 가지고 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;backend-설정&quot;&gt;Backend 설정&lt;/h3&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;npm install express-generator -g
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;express --ejs backend #&lt;/span&gt;express-generator를 이용해 express 프로젝트를 생성한다
&lt;span class=&quot;go&quot;&gt;cd backend
npm install
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;npm start #&lt;/span&gt; 서버 가동
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 순서로 간단하게 Express프레임워크의 Backend구성이 끝났다.&lt;/p&gt;

&lt;h3 id=&quot;frontend-설정&quot;&gt;FrontEnd 설정&lt;/h3&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;npm install -g vue-cli
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;vue init webpack frontend #&lt;/span&gt; frontend 폴더에 vue프로젝트를 생성한다
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; 여러가지 설정하는것이 나오는데 vue-router, eslint 등 필요한것을 Y로 설정.
&lt;span class=&quot;go&quot;&gt;cd front
npm install
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;vue init webpack fronted 실행 시 물어보는 질문&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;? Project name :
? Project description A Vue.js : 
? Author : 
? Vue build standalone :
? Install vue-router? :
? Use ESLint to lint your code? :
? Pick an ESLint preset Standard :
? Set up unit tests : 
? Pick a test runner :
? Setup e2e tests with Nightwatch? :
? Should we run `npm install` for you after the project has been created? (recommended) :
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 순서로 이번에도 간단하게 Vue.js프레임워크의 Frontend구성이 끝났다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;proxytable-설정&quot;&gt;ProxyTable 설정&lt;/h3&gt;
&lt;p&gt;여기까지 따라왔다면 현재 Backend, Frontend의 2개의 폴더가 생겼을 것이다.&lt;br /&gt;
project&lt;br /&gt;
– frontend  &lt;br /&gt;
└ backend&lt;/p&gt;

&lt;p&gt;현재 2개의 폴더는 각각 따로 실행되고 있다.&lt;br /&gt;
port : (frontend : 8080, backend: 3000)&lt;br /&gt;
이 2개를 연결해줘야 한다.&lt;/p&gt;

&lt;p&gt;/frontend/config/index.js 를 열어 편집&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;proxyTable: {
    '/api': {
        target: 'http://localhost:3000/api'
    }
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위와같이 설정해주면 frontend에서 :8080/api/.. 와같이 시작하는 url은&lt;br /&gt;
backend의 :3000/api/.. 로 proxy해준다.&lt;/p&gt;

&lt;p&gt;이제 2개의 프로젝트가 정상적으로 연결되었다.&lt;/p&gt;

&lt;p&gt;터미널 2개를 띄워 각각 프로젝트를 실행해준다.&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;frontend - npm start - http://localhost:8080  
backend - npm start - http://localhost:3000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;http://localhost:8080 에서 http://localhost:8080/api/..를 실행해보면&lt;br /&gt;
http://localhost:3000/api/.. 에서 반응이 오는것을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;너무나 간단한 기본 개발환경 세팅방법.&lt;br /&gt;
&lt;em&gt;참 쉽죠?&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019-06-01/Express-Vue-%E1%84%80%E1%85%A2%E1%84%87%E1%85%A1%E1%86%AF%E1%84%92%E1%85%AA%E1%86%AB%E1%84%80%E1%85%A7%E1%86%BC-%E1%84%89%E1%85%A6%E1%84%90%E1%85%B5%E1%86%BC%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5/</link>
        <guid isPermaLink="true">http://localhost:4000/2019-06-01/Express-Vue-%E1%84%80%E1%85%A2%E1%84%87%E1%85%A1%E1%86%AF%E1%84%92%E1%85%AA%E1%86%AB%E1%84%80%E1%85%A7%E1%86%BC-%E1%84%89%E1%85%A6%E1%84%90%E1%85%B5%E1%86%BC%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5/</guid>
      </item>
    
      <item>
        <title>ExpressSession 사용해보기</title>
        <description>&lt;h3 id=&quot;expresssession&quot;&gt;ExpressSession&lt;/h3&gt;
&lt;p&gt;ExpressSession은 Express 프레임워크에서 세션관리를 위한 미들웨어입니다.&lt;/p&gt;

&lt;h3 id=&quot;appjs를-편집합니다&quot;&gt;app.js를 편집합니다.&lt;/h3&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'express-session'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;expressSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RedisStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;resave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;saveUninitialized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'!$#%#$%#$#'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;store - 세션을 저장할 장소를 지정한다. 위 예제에서는 redis에 저장한다.&lt;/li&gt;
  &lt;li&gt;파일 / redis / database 등 설정 가능&lt;/li&gt;
  &lt;li&gt;secret - 쿠키의 임의로 변조하는것을 막기 위하여 설정하는 값. 이 값을 통하여 암호화하여 저장한다.&lt;/li&gt;
  &lt;li&gt;resave - 세션을 언제나 저장할지 정하는 값. false권장&lt;/li&gt;
  &lt;li&gt;saveUninitialized - 세션이 저장되기 전에 uninitialized상태로 미리 저장한다.&lt;/li&gt;
  &lt;li&gt;cookie - 쿠키사용여부와 그에대한 속성설정&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 30 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019-05-30/express-session/</link>
        <guid isPermaLink="true">http://localhost:4000/2019-05-30/express-session/</guid>
      </item>
    
      <item>
        <title>Dont't use Array.forEach()</title>
        <description>&lt;h3 id=&quot;nodejs에서-foreach를-사용하지-마십시오&quot;&gt;Node.js에서 forEach를 사용하지 마십시오.&lt;/h3&gt;
&lt;p&gt;사소하지만 작은 습관이 성능을 더 빨라지게 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;JavaScript에서 Array.forEach는 for()문법에 비해 95% 더 느립니다.&lt;br /&gt;
&lt;strong&gt;Dont’t use :&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Use :&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;   
    &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Also :&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;   
    &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 코드는 for문을 한 바퀴 돌 때마다 Array.length를 계산하기 때문에 성능이 떨어질 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;참고사이트&quot;&gt;참고사이트&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://coderwall.com/p/kvzbpa/don-t-use-array-foreach-use-for-instead&quot;&gt;원본&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 28 May 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019-05-28/Dont-use-foreach/</link>
        <guid isPermaLink="true">http://localhost:4000/2019-05-28/Dont-use-foreach/</guid>
      </item>
    
      <item>
        <title>[ORM] Node.js에서 ORM 사용하기</title>
        <description>&lt;h3 id=&quot;ormobject-relational-mapping-이란&quot;&gt;ORM(Object Relational Mapping) 이란?&lt;/h3&gt;
&lt;p&gt;ORM(Object Relational Model)은 사물을 추상화시켜 이해하려는 OOP적 사고방식과 DataModel을 정형화하여 관리하려는 RDB 사이를 연결할 계층의 역할로 제시된 패러다임으로 RDB의 모델을 OOP에 Entity 형태로 투영시키는 방식을 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_2/img_orm.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;즉, Object와 Database간에 연결 역할을 해주는녀석이 ORM이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;1-orm의-등장배경&quot;&gt;1. ORM의 등장배경&lt;/h4&gt;

&lt;p&gt;ORM을 사용하지 않을 경우 개발자가 개발을 위하여 Database에 접근하기 위해서는 SQL Query문을 직접 만들었다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SQL문법을 알고 있어야하는 문제 (쿼리문 작성시간이 오래걸려 개발이 지체되는 문제가 발생)&lt;/li&gt;
  &lt;li&gt;개발 코드와 Database가 서로 종속된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와같은 문제점들이 생겨나기 시작했다.&lt;br /&gt;
이러한 문제점을 해결하기 위해 ORM이 등장하였고 ORM이 등장함으로서&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SQL Query 문법에서 비교적 자유로워졌으며&lt;/li&gt;
  &lt;li&gt;개발 코드와 Database를 분리함으로써 객체지향의 의도에 부합하게 되었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;2-orm사용의-장점과-단점&quot;&gt;2. ORM사용의 장점과 단점&lt;/h4&gt;

&lt;p&gt;장점&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;개발의 생산성 향상
    &lt;ul&gt;
      &lt;li&gt;선언문, 할당, 종료 등과같은 부수적인 코드가 사라짐으로써 개발의 생산성 향상.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;명확한 쿼리 (버그와 실수 감소)
    &lt;ul&gt;
      &lt;li&gt;코드그 간결하고 직관이기 때문에 가독성을 높여준다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DB 의존성 감소
    &lt;ul&gt;
      &lt;li&gt;대부분 ORM 솔루션이 특정 Database에 종속적이지 않다.&lt;br /&gt;
 개발자는 Database에 상관없이 Object에만 집중할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;단점&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;튜닝의 어려움
    &lt;ul&gt;
      &lt;li&gt;미세한 수정 및 디버그하기가 상대적으로 어렵다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;복잡한 쿼리작성의 문제
    &lt;ul&gt;
      &lt;li&gt;ORM이 지정해 놓은 명령만 내릴 수 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Raw쿼리에 비해 느린 실행속도
    &lt;ul&gt;
      &lt;li&gt;DB에 직접 명령을 내리지 않고 한단계 거쳐가기 때문에&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;3-raw-sql-vs-typeorm-vs-sequelizejs-vs-knex&quot;&gt;3. &lt;code class=&quot;highlighter-rouge&quot;&gt;Raw SQL&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;TypeORM&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;Sequelize.js&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;Knex&lt;/code&gt;&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;문법의 비교&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 1. SQL&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM post WHERE authorId = 12 AND status = 'active'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Knex&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;knex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;authorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'active'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Sequelize&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;authorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'active'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// TypeORM&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;authorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'active'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 2. SQL&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;select * 
               from category_page 
               where category_id = 5
                 and (show_at is null or show_at &amp;gt;= now()) 
                 and (hide_at is null or hide_at &amp;lt;= now())
               order by updated_at desc 
               limit 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             
&lt;span class=&quot;c1&quot;&gt;// Knex&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;knex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;category_page&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;category_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;whereNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'show_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orWhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'show_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;whereNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hide_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orWhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hide_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orderBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'updated_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'desc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Sequelize&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CategoryPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;category_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;show_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hide_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'updated_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'DESC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 참고 EQ(&quot;=&quot;), GTE(&quot;&amp;gt;=&quot;), GT(&quot;&amp;gt;&quot;), LT(&quot;&amp;lt;&quot;), LTE(&quot;&amp;lt;=&quot;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// TypeORM&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CategoryPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createQueryBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;category_id = :categoryId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;categoryId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;andWhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(show_at is null or show_at &amp;gt;= now())&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;andWhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(hide_at is null or hide_at &amp;lt;= now())&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orderBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;DESC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getMany&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;함수 실행속도 비교 (10번 실행한 결과의 평균 수치)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;-&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;typeORM&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sequelize.js&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Knex.js&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Query 1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.19&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8.42&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Query 2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.51&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.58&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.02&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.59&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Query 3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.39&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.92&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9.13&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.13&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;– Query 1 : 단순 select 쿼리&lt;br /&gt;
– Query 2 : 단순 select 쿼리&lt;br /&gt;
– Query 3 : 단순 구조의 table 2개 join 쿼리&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;단위 : (ms)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;실행 Server의 성능에 따라 결과는 달라질 수 있음&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Github&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;-&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;typeORM&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sequelize.js&lt;/code&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Knex.js&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Stars (git)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12,541&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;18,379&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9,409&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Language&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TypeScript&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TypeScript&lt;br /&gt;(TS &amp;gt;= 3.1)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;JavaScript&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Google (English)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;++&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+++&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;++&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Google (Korean)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;++&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;+++&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;++&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmtrends.com/sequelize-vs-typeorm-vs-knex&quot;&gt;(NPM trends 로 확인하는 비교자료)&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Support Databases&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;TypeORM : &lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt; / &lt;code class=&quot;highlighter-rouge&quot;&gt;MariaDB&lt;/code&gt; / Postgres / CockroachDB / SQLite / Microsoft SQL Server / Oracle / sql.js / MongoDB NoSQL&lt;/li&gt;
  &lt;li&gt;Sequelize : Postgres, &lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;MariaDB&lt;/code&gt;, SQLite and Microsoft SQL Server.&lt;/li&gt;
  &lt;li&gt;Knex :  PostgreSQL, &lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt; and SQLite3&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;4-그래서-어떤-것을-사용할-것인가&quot;&gt;4. 그래서 어떤 것을 사용할 것인가?&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;후보 1&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;TypeORM, Sequelize(only TS &amp;gt;= 3.1 is supported.)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;장점 : TypeScript를 지원, 생산성, 신뢰성을 만족&lt;/li&gt;
  &lt;li&gt;단점 : 실행속도, 튜닝의 어려움, 복잡한 쿼리작성 등의 단점(ORM의 단점)을 가지고 있으나, 이정도로 복잡하게 사용할 것인가? 고민&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;TypeORM, Sequelize의 차이점&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Sequelize에 비해 상대적으로 속도가 빠른 TypeORM&lt;/li&gt;
    &lt;li&gt;TypeORM는 코드작성이 raw쿼리에 좀 더 가까운 모습&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;후보 2&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;인생은 날 쿼리. node-mysql/node-mysql2 only!&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;장점 : 튜닝, 복잡한 쿼리작성의 문제, ORM에 비해 상대적으로 빠른 실행속도 모두를 만족!&lt;/li&gt;
  &lt;li&gt;단점 : 생산성, 신뢰성 은 다소 떨어지는 단점&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;참고사이트&quot;&gt;참고사이트&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodejs.libhunt.com/categories/524-odm-orm&quot;&gt;Node에서 지원하는 다양한 ORM모듈&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.slant.co/topics/11235/~javascript-orms&quot;&gt;6 Best JavaScript ORMs as of 2019&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://typeorm.io/#/&quot;&gt;TypeORM Document&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.sequelizejs.com/manual/querying.html#where&quot;&gt;Sequelize.js Document&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tgriesser/knex&quot;&gt;Knex.js Document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 29 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019-04-29/Node%EC%97%90%EC%84%9C-ORM-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
        <guid isPermaLink="true">http://localhost:4000/2019-04-29/Node%EC%97%90%EC%84%9C-ORM-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      </item>
    
      <item>
        <title>[GCP] VM Instance Disk Monitoring</title>
        <description>&lt;p&gt;GCP.. 검색해보면 AWS에 비해 많이 부족한 검색자료. 이번에 적용하는 김에 문서로 정리해둔다.
(다음에 또 적용할 필요가 있을 때를 대비하여)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VM Instance 는 생성하였다고 가정한 후 시작합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-instance에-stackdriver-monitoring-설치&quot;&gt;1. Instance에 Stackdriver Monitoring 설치&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/monitoring/agent/install-agent?hl=ko&quot;&gt;GCP Document 문서&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;1-vm-인스턴스에서-다음-명령어를-실행하여-모니터링-에이전트를-설치합니다&quot;&gt;1. VM 인스턴스에서 다음 명령어를 실행하여 모니터링 에이전트를 설치합니다.&lt;/h4&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh
sudo bash install-monitoring-agent.sh
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-vm-인스턴스에서-다음-명령어를-실행하여-monitoring-에이전트를-다시-시작합니다&quot;&gt;2. VM 인스턴스에서 다음 명령어를 실행하여 Monitoring 에이전트를 다시 시작합니다.&lt;/h4&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;sudo service stackdriver-agent restart
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-stackdriver에-policy-추가&quot;&gt;2. Stackdriver에 Policy 추가&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/monitoring/alerts/&quot;&gt;GCP Document 문서&lt;/a&gt;
&lt;a href=&quot;https://cloud.google.com/stackdriver/pricing#alert-usage&quot;&gt;정책만들기 GCP 문서&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;1-policy-create&quot;&gt;1. Policy Create&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Stackdriver &amp;gt; Alerting &amp;gt; Create a Policy&lt;/code&gt; 로 이동
&lt;img src=&quot;/images/post_1/img_1.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add Condition 선택&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Target 설정
Resource Type : &lt;code class=&quot;highlighter-rouge&quot;&gt;GCE VM Instance&lt;/code&gt;
Metric : &lt;code class=&quot;highlighter-rouge&quot;&gt;Disk Usage&lt;/code&gt; [디스크 사용량 - 정량(숫자)표시] or
			&lt;code class=&quot;highlighter-rouge&quot;&gt;Disk Utilization&lt;/code&gt; [디스크 사용량 - % 계산]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Filter를 이용하여 원하는 Disk 선택&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Configuration 설정 (문서 참고)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Save&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2-notifications-설정&quot;&gt;2. Notifications 설정&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;알림을 받고자 하는 매체 선택
&lt;code class=&quot;highlighter-rouge&quot;&gt;SMS&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Slack&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Email&lt;/code&gt; 등&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;3-save-done&quot;&gt;3. Save (done)&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;용량을 채우고 테스트 해보아야 하는데 어떻게? =&amp;gt; &lt;a href=&quot;/2019-04-15/Linux-%E1%84%83%E1%85%A5%E1%84%86%E1%85%B5%E1%84%91%E1%85%A1%E1%84%8B%E1%85%B5%E1%86%AF-%E1%84%86%E1%85%A1%E1%86%AB%E1%84%83%E1%85%B3%E1%86%AF%E1%84%80%E1%85%B5/&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019-04-16/GCP-Disk%EC%9A%A9%EB%9F%89-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81/</link>
        <guid isPermaLink="true">http://localhost:4000/2019-04-16/GCP-Disk%EC%9A%A9%EB%9F%89-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81/</guid>
      </item>
    
      <item>
        <title>Linux 더미파일 만들기</title>
        <description>&lt;h2 id=&quot;과제-disk-사용량이-90이상이-넘어가는것을-테스트하기-위해-용량이-큰-파일이-필요하다&quot;&gt;과제. Disk 사용량이 90%이상이 넘어가는것을 테스트하기 위해 용량이 큰 파일이 필요하다.&lt;/h2&gt;

&lt;p&gt;1G 용량을 차지하는 더미파일을 만드는 명령어가 존재한다.&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; fallocate &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 1G test_file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019-04-15/Linux-%EB%8D%94%EB%AF%B8%ED%8C%8C%EC%9D%BC-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
        <guid isPermaLink="true">http://localhost:4000/2019-04-15/Linux-%EB%8D%94%EB%AF%B8%ED%8C%8C%EC%9D%BC-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      </item>
    
  </channel>
</rss>
